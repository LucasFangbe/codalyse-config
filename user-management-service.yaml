spring:
  application:
    name: user-management-service
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 1
  security:
    admin-direct-access:
      client-id: ${ADMIN_CLIENT_ID:admin-cli}
      username: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
      grant_type: password
      token-uri: ${TOKEN_URI:http://localhost:9090/realms/master/protocol/openid-connect/token}

cache:
  distributed:
    rabbitmq:
      consumer:
        id: ${RABBITMQ_CONSUMER_ID:USER_MANAGEMENT_SUB_APPLICATION_1}
    mode: true

rabbitmq:
  exchanges:
    - cache-queue-event-exchange

  queues:
    - name: user-management-cache-event-queue
      exchange: cache-queue-event-exchange
      routingKey: subApplicationId.USER_MANAGEMENT_SUB_APPLICATION

keycloak:
  realm: code-guardian-realm

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_API_ENDPOINT:http://localhost:9411/api/v2/spans}
identity:
  server:
    base:
      uri: ${IDENTITY_SERVER_BASE_URI:http://localhost:9090}
      realm: ${IDENTITY_SERVER_REALM:realm}
